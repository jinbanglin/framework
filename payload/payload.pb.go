// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

/*
Package payload is a generated protocol buffer package.

It is generated from these files:
	payload.proto

It has these top-level messages:
	MossPacket
	MossMessage
*/
package payload

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MossPacket struct {
	ServiceCode uint32       `protobuf:"varint,1,opt,name=service_code,json=serviceCode" json:"service_code,omitempty"`
	Payload     []byte       `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	MossMessage *MossMessage `protobuf:"bytes,3,opt,name=moss_message,json=mossMessage" json:"moss_message,omitempty"`
	UserId      string       `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ClientIp    string       `protobuf:"bytes,5,opt,name=client_ip,json=clientIp" json:"client_ip,omitempty"`
}

func (m *MossPacket) Reset()                    { *m = MossPacket{} }
func (m *MossPacket) String() string            { return proto.CompactTextString(m) }
func (*MossPacket) ProtoMessage()               {}
func (*MossPacket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MossPacket) GetServiceCode() uint32 {
	if m != nil {
		return m.ServiceCode
	}
	return 0
}

func (m *MossPacket) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MossPacket) GetMossMessage() *MossMessage {
	if m != nil {
		return m.MossMessage
	}
	return nil
}

func (m *MossPacket) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MossPacket) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

type MossMessage struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *MossMessage) Reset()                    { *m = MossMessage{} }
func (m *MossMessage) String() string            { return proto.CompactTextString(m) }
func (*MossMessage) ProtoMessage()               {}
func (*MossMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MossMessage) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MossMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*MossPacket)(nil), "payload.MossPacket")
	proto.RegisterType((*MossMessage)(nil), "payload.MossMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Invoking service

type InvokingClient interface {
	Invoking(ctx context.Context, in *MossPacket, opts ...grpc.CallOption) (*MossPacket, error)
}

type invokingClient struct {
	cc *grpc.ClientConn
}

func NewInvokingClient(cc *grpc.ClientConn) InvokingClient {
	return &invokingClient{cc}
}

func (c *invokingClient) Invoking(ctx context.Context, in *MossPacket, opts ...grpc.CallOption) (*MossPacket, error) {
	out := new(MossPacket)
	err := grpc.Invoke(ctx, "/payload.Invoking/Invoking", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Invoking service

type InvokingServer interface {
	Invoking(context.Context, *MossPacket) (*MossPacket, error)
}

func RegisterInvokingServer(s *grpc.Server, srv InvokingServer) {
	s.RegisterService(&_Invoking_serviceDesc, srv)
}

func _Invoking_Invoking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MossPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvokingServer).Invoking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payload.Invoking/Invoking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvokingServer).Invoking(ctx, req.(*MossPacket))
	}
	return interceptor(ctx, in, info, handler)
}

var _Invoking_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payload.Invoking",
	HandlerType: (*InvokingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoking",
			Handler:    _Invoking_Invoking_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payload.proto",
}

func init() { proto.RegisterFile("payload.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x5d, 0x5b, 0xdb, 0x66, 0x92, 0x82, 0x8c, 0x82, 0x8b, 0x5e, 0x62, 0x4e, 0x39, 0xf5,
	0xd0, 0x82, 0xde, 0xf5, 0x94, 0x43, 0x41, 0xf6, 0x0f, 0x84, 0x98, 0x1d, 0xc2, 0xd2, 0x26, 0x13,
	0x32, 0xb1, 0xe0, 0x3f, 0xf3, 0xe7, 0x49, 0x92, 0x06, 0x23, 0xf4, 0xf6, 0xbe, 0x37, 0xec, 0xbe,
	0xc7, 0x83, 0x75, 0x9d, 0x7d, 0x1f, 0x39, 0xb3, 0x9b, 0xba, 0xe1, 0x96, 0x71, 0x79, 0xc6, 0xe8,
	0x47, 0x01, 0xec, 0x59, 0xe4, 0x23, 0xcb, 0x0f, 0xd4, 0xe2, 0x33, 0x04, 0x42, 0xcd, 0xc9, 0xe5,
	0x94, 0xe6, 0x6c, 0x49, 0xab, 0x50, 0xc5, 0x6b, 0xe3, 0x9f, 0xbd, 0x77, 0xb6, 0x84, 0x1a, 0xc6,
	0xc7, 0xfa, 0x3a, 0x54, 0x71, 0x60, 0x46, 0xc4, 0x57, 0x08, 0x4a, 0x16, 0x49, 0x4b, 0x12, 0xc9,
	0x0a, 0xd2, 0xb3, 0x50, 0xc5, 0xfe, 0xf6, 0x7e, 0x33, 0x46, 0x77, 0x39, 0xfb, 0xe1, 0x66, 0xfc,
	0xf2, 0x0f, 0xf0, 0x01, 0x96, 0x5f, 0x42, 0x4d, 0xea, 0xac, 0x9e, 0x87, 0x2a, 0xf6, 0xcc, 0xa2,
	0xc3, 0xc4, 0xe2, 0x13, 0x78, 0xf9, 0xd1, 0x51, 0xd5, 0xa6, 0xae, 0xd6, 0x37, 0xfd, 0x69, 0x35,
	0x18, 0x49, 0x1d, 0xed, 0xc0, 0x9f, 0xfc, 0x88, 0x08, 0xf3, 0x49, 0xe5, 0x5e, 0xe3, 0x2d, 0xcc,
	0x4a, 0x29, 0xfa, 0x9e, 0x9e, 0xe9, 0xe4, 0xf6, 0x0d, 0x56, 0x49, 0x75, 0xe2, 0x83, 0xab, 0x0a,
	0x7c, 0x99, 0xe8, 0xbb, 0x7f, 0x2d, 0x87, 0x35, 0x1e, 0x2f, 0x99, 0xd1, 0xd5, 0xe7, 0xa2, 0xdf,
	0x70, 0xf7, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xb0, 0xe5, 0x7a, 0x54, 0x01, 0x00, 0x00,
}

syntax = "proto3";

package payload;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = true;

service Invoking {
    rpc Invoking (MossPacket) returns (MossPacket) {
    }
}

message MossPacket {
    uint32 service_code = 1 [(validate.rules).uint32.gt = 10000]; // communicate by protocol
    bytes payload = 2 [(validate.rules).bytes.min_len = 1]; // payload json or protobuf
    MossMessage moss_message = 3;
    map<string,string> moss_metadata=4;//metadata some data like jwt
}

message MossMessage {
    uint32 code = 1;
    string msg = 2;
}
